<?php

/**
 * @file
 * An entity, stripped of its Agent's asking powers.
 */

namespace TestRig\Models;

use TestRig\Services\Generate;

/**
 * @class
 * Entity.
 */
class Entity extends AbstractDBObject
{
    // Database table we save to.
    protected $table = "entity";
    // Default arguments.
    private $defaultArguments = array(
        'mean_ack_time' => 5,
        'mean_answer_time' => 5,
        'mean_routing_time' => 5,
        'tier' => 1,
        'probability_answer' => 0.5,
    );

    /**
     * Create and save new entity.
     *
     * @param array $arguments
     *   Any arguments to be saved alongside autogenerated name.
     */
    public function create($arguments = array())
    {
        // Create data suitable for database.
        $this->data = array(
            'name' => isset($arguments['name']) ? $arguments['name'] :
                Generate::getEntityName(),
        );

        // Turn arguments into entity properties,, based on default arguments.
        foreach ($this->defaultArguments as $argumentName => $argumentData) {
            // Permit overriding by incoming arguments.
            if (isset($arguments[$argumentName])) {
                $argumentData = $arguments[$argumentName];
            }

            // Different callbacks based on argumentName.
            switch ($argumentName) {
            case "tier":
                $this->data[$argumentName] = $argumentData;
                break;

            case "mean_ack_time":
            case "mean_answer_time":
            case "mean_routing_time":
                $this->data[$argumentName] = Generate::getTime($argumentData);
                break;

            case "probability_answer":
                $this->data[$argumentName] = Generate::getProbability($argumentData);
            }
        }

        // Call parent class to now create this object in the DB.
        parent::create();
    }
}
