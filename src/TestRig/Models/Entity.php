<?php

/**
 * @file
 * An entity agent.
 *
 * Ideally we would use an ORM, but we want to be very lightweight.
 */

namespace TestRig\Models;

use TestRig\Services\Generate;

/**
 * @class
 * Entity.
 */
class Entity extends AbstractDBObject
{
    // Database table we save to.
    protected $table = "entity";
    // Default arguments.
    protected $defaultArguments = array(
        'mean_response_time' => 500,
        'probability_reask' => 0.5,
    );

    /**
     * Create and save new entity.
     *
     * @param array $arguments
     *   Any arguments to be saved alongside autogenerated name.
     */
    public function create($arguments = array())
    {
        // Create data suitable for database.
        $this->data = array();
        $this->data['name'] = isset($arguments['name']) ? $arguments['name']
          : Generate::getEntityName();

        // Turn arguments into entity properties,, based on default arguments.
        foreach ($this->defaultArguments as $argumentName => $argumentData)
        {
            // Permit overriding by incoming arguments.
            if (isset($arguments[$argumentName]))
            {
                $argumentData = $arguments[$argumentName];
            }

            // Different callbacks based on argumentName.
            switch($argumentName)
            {
            case "mean_response_time":
                $this->data[$argumentName] = Generate::getTime($argumentData);
                break;

            case "probability_reask":
                $this->data[$argumentName] = Generate::getProbability($argumentData);
            }
        }

        parent::create();
    }
}
